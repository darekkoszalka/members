@inject NavigationManager _navigationManager
@inject IDbContextFactory<ApplicationDbContext> _contextFactory

<RadzenCard>
    <h4>Adres</h4>

    @if (UnionInstitutionAddress != null)
    {

        @if (UnionInstitutionAddress.ApartamentNumber != null && UnionInstitutionAddress.ApartamentNumber != "")
        {
            <p><span class="text-primary"><RadzenIcon Icon="home" /></span> @UnionInstitutionAddress.Street @UnionInstitutionAddress.HouseNumber/@UnionInstitutionAddress.ApartamentNumber</p>
        }
        else
        {
            <p><span class="text-primary"><RadzenIcon Icon="home" /></span>@UnionInstitutionAddress.Street @UnionInstitutionAddress.HouseNumber</p>
        }
        <p>@UnionInstitutionAddress.PostCode @UnionInstitutionAddress.City</p>
        <small class="text-secondary mt-2">Poczta</small>
        <p>@UnionInstitutionAddress.PostCity</p>
        <div class="col-sm-6 mt-3">
            <RadzenButton Text="Edytuj" Click="EditAddress" ButtonStyle="ButtonStyle.Secondary" />
        </div>
    }
    else
    {
        <div class="col-sm-6 mt-3">
            <RadzenButton Text="Dodaj" Click="AddAddress" ButtonStyle="ButtonStyle.Secondary" />
        </div>
    }
</RadzenCard>


@code {
    [Parameter]
    public UnionInstitution UnionInstitution { get; set; }

    [Parameter]
    public UnionInstitutionAddress UnionInstitutionAddress { get; set; }


    public TypeOfUnionInstitution TypeOfUnionInstitution { get; set; }



    async Task AddAddress()
    {
        _navigationManager.NavigateTo("/user/unionInstitutions/branchPages/addressCreate/Create");
    }

    async Task EditAddress()
    {
        _navigationManager.NavigateTo("/user/unionInstitutions/branchPages/addressEdit/Edit");
    }
}

